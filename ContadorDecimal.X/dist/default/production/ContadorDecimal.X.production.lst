

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Sep 13 07:09:31 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  05D9                     __pidataBANK0:
   215                           
   216                           ;initializer for main@F1301
   217  05D9  3407               	retlw	7
   218  05DA  3400               	retlw	0
   219  05DB  340B               	retlw	11
   220  05DC  3400               	retlw	0
   221  05DD  340D               	retlw	13
   222  05DE  3400               	retlw	0
   223  05DF  340E               	retlw	14
   224  05E0  3400               	retlw	0
   225                           
   226                           	psect	idataBANK1
   227  05F4                     __pidataBANK1:
   228                           
   229                           ;initializer for main@F1299
   230  05F4  343F               	retlw	63
   231  05F5  3400               	retlw	0
   232  05F6  3406               	retlw	6
   233  05F7  3400               	retlw	0
   234  05F8  345B               	retlw	91
   235  05F9  3400               	retlw	0
   236  05FA  344F               	retlw	79
   237  05FB  3400               	retlw	0
   238  05FC  3466               	retlw	102
   239  05FD  3400               	retlw	0
   240  05FE  346D               	retlw	109
   241  05FF  3400               	retlw	0
   242  0600  347D               	retlw	125
   243  0601  3400               	retlw	0
   244  0602  3407               	retlw	7
   245  0603  3400               	retlw	0
   246  0604  347F               	retlw	127
   247  0605  3400               	retlw	0
   248  0606  3467               	retlw	103
   249  0607  3400               	retlw	0
   250  0005                     _PORTA	set	5
   251  0006                     _PORTB	set	6
   252  0085                     _TRISA	set	133
   253  0086                     _TRISB	set	134
   254                           
   255                           	psect	cinit
   256  07E1                     start_initialization:	
   257                           ; #config settings
   258                           
   259  07E1                     __initialization:
   260                           
   261                           ; Initialize objects allocated to BANK1
   262  07E1  1383               	bcf	3,7	;select IRP bank0
   263  07E2  30B4               	movlw	low (__pdataBANK1+20)
   264  07E3  00FD               	movwf	btemp+-1
   265  07E4  3005               	movlw	high __pidataBANK1
   266  07E5  00FE               	movwf	btemp
   267  07E6  30F4               	movlw	low __pidataBANK1
   268  07E7  00FF               	movwf	btemp+1
   269  07E8  30A0               	movlw	low __pdataBANK1
   270  07E9  0084               	movwf	4
   271  07EA  120A  118A  25E5  120A  118A  	fcall	init_ram0
   272                           
   273                           ; Initialize objects allocated to BANK0
   274  07EF  3060               	movlw	low (__pdataBANK0+8)
   275  07F0  00FD               	movwf	btemp+-1
   276  07F1  3005               	movlw	high __pidataBANK0
   277  07F2  00FE               	movwf	btemp
   278  07F3  30D9               	movlw	low __pidataBANK0
   279  07F4  00FF               	movwf	btemp+1
   280  07F5  3058               	movlw	low __pdataBANK0
   281  07F6  0084               	movwf	4
   282  07F7  120A  118A  25E5  120A  118A  	fcall	init_ram0
   283  07FC                     end_of_initialization:	
   284                           ;End of C runtime variable initialization code
   285                           
   286  07FC                     __end_of__initialization:
   287  07FC  0183               	clrf	3
   288  07FD  120A  118A  2F2A   	ljmp	_main	;jump to C main() function
   289                           
   290                           	psect	dataBANK0
   291  0058                     __pdataBANK0:
   292  0058                     main@F1301:
   293  0058                     	ds	8
   294                           
   295                           	psect	dataBANK1
   296  00A0                     __pdataBANK1:
   297  00A0                     main@F1299:
   298  00A0                     	ds	20
   299                           
   300                           	psect	inittext
   301  05E1                     init_fetch0:	
   302                           ;	Called with low address in FSR and high address in W
   303                           
   304  05E1  087E               	movf	btemp,w
   305  05E2  008A               	movwf	10
   306  05E3  087F               	movf	btemp+1,w
   307  05E4  0082               	movwf	2
   308  05E5                     init_ram0:	
   309                           ;Called with:
   310                           ;	high address of idata address in btemp 
   311                           ;	low address of idata address in btemp+1 
   312                           ;	low address of data in FSR
   313                           ;	high address + 1 of data in btemp-1
   314                           
   315  05E5  120A  118A  25E1  120A  118A  	fcall	init_fetch0
   316  05EA  0080               	movwf	0
   317  05EB  0A84               	incf	4,f
   318  05EC  0804               	movf	4,w
   319  05ED  067D               	xorwf	btemp+-1,w
   320  05EE  1903               	btfsc	3,2
   321  05EF  3400               	retlw	0
   322  05F0  0AFF               	incf	btemp+1,f
   323  05F1  1903               	btfsc	3,2
   324  05F2  0AFE               	incf	btemp,f
   325  05F3  2DE5               	goto	init_ram0
   326                           
   327                           	psect	cstackCOMMON
   328  0070                     __pcstackCOMMON:
   329  0070                     ?_main:
   330  0070                     ?___wmul:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ___wmul@multiplier:	
   334                           ; 2 bytes @ 0x0
   335                           
   336                           
   337                           ; 2 bytes @ 0x0
   338  0070                     	ds	2
   339  0072                     ___wmul@multiplicand:
   340                           
   341                           ; 2 bytes @ 0x2
   342  0072                     	ds	2
   343  0074                     ??___wmul:
   344  0074                     ___wmul@product:	
   345                           ; 1 bytes @ 0x4
   346                           
   347                           
   348                           ; 2 bytes @ 0x4
   349  0074                     	ds	2
   350  0076                     ?_pow:
   351  0076                     pow@b:	
   352                           ; 2 bytes @ 0x6
   353                           
   354                           
   355                           ; 2 bytes @ 0x6
   356  0076                     	ds	2
   357  0078                     pow@pow:
   358                           
   359                           ; 2 bytes @ 0x8
   360  0078                     	ds	2
   361  007A                     ??_pow:
   362                           
   363                           ; 1 bytes @ 0xA
   364  007A                     	ds	1
   365  007B                     ??___awdiv:
   366                           
   367                           ; 1 bytes @ 0xB
   368  007B                     	ds	1
   369  007C                     ??___awmod:
   370                           
   371                           ; 1 bytes @ 0xC
   372  007C                     	ds	1
   373                           
   374                           	psect	cstackBANK0
   375  0020                     __pcstackBANK0:
   376  0020                     pow@i:
   377                           
   378                           ; 2 bytes @ 0x0
   379  0020                     	ds	2
   380  0022                     pow@ans:
   381                           
   382                           ; 2 bytes @ 0x2
   383  0022                     	ds	2
   384  0024                     ?___awdiv:
   385  0024                     ___awdiv@divisor:	
   386                           ; 2 bytes @ 0x4
   387                           
   388                           
   389                           ; 2 bytes @ 0x4
   390  0024                     	ds	2
   391  0026                     ___awdiv@dividend:
   392                           
   393                           ; 2 bytes @ 0x6
   394  0026                     	ds	2
   395  0028                     ___awdiv@counter:
   396                           
   397                           ; 1 bytes @ 0x8
   398  0028                     	ds	1
   399  0029                     ___awdiv@sign:
   400                           
   401                           ; 1 bytes @ 0x9
   402  0029                     	ds	1
   403  002A                     ___awdiv@quotient:
   404                           
   405                           ; 2 bytes @ 0xA
   406  002A                     	ds	2
   407  002C                     ?___awmod:
   408  002C                     ___awmod@divisor:	
   409                           ; 2 bytes @ 0xC
   410                           
   411                           
   412                           ; 2 bytes @ 0xC
   413  002C                     	ds	2
   414  002E                     ___awmod@dividend:
   415                           
   416                           ; 2 bytes @ 0xE
   417  002E                     	ds	2
   418  0030                     ___awmod@counter:
   419                           
   420                           ; 1 bytes @ 0x10
   421  0030                     	ds	1
   422  0031                     ___awmod@sign:
   423                           
   424                           ; 1 bytes @ 0x11
   425  0031                     	ds	1
   426  0032                     ??_main:
   427                           
   428                           ; 1 bytes @ 0x12
   429  0032                     	ds	4
   430  0036                     main@nums:
   431                           
   432                           ; 20 bytes @ 0x16
   433  0036                     	ds	20
   434  004A                     main@digits:
   435                           
   436                           ; 8 bytes @ 0x2A
   437  004A                     	ds	8
   438  0052                     main@counter:
   439                           
   440                           ; 2 bytes @ 0x32
   441  0052                     	ds	2
   442  0054                     main@i:
   443                           
   444                           ; 2 bytes @ 0x34
   445  0054                     	ds	2
   446  0056                     main@j:
   447                           
   448                           ; 2 bytes @ 0x36
   449  0056                     	ds	2
   450                           
   451                           	psect	maintext
   452  072A                     __pmaintext:	
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 28 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  j               2   54[BANK0 ] int 
   463 ;;  i               2   52[BANK0 ] int 
   464 ;;  nums           20   22[BANK0 ] int [10]
   465 ;;  digits          8   42[BANK0 ] int [4]
   466 ;;  counter         2   50[BANK0 ] int 
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : B00/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0      34       0       0       0
   478 ;;      Temps:          0       4       0       0       0
   479 ;;      Totals:         0      38       0       0       0
   480 ;;Total ram usage:       38 bytes
   481 ;; Hardware stack levels required when called: 2
   482 ;; This function calls:
   483 ;;		___awdiv
   484 ;;		___awmod
   485 ;;		_pow
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491  072A                     _main:	
   492                           ;psect for function _main
   493                           
   494  072A                     l876:	
   495                           ;incstack = 0
   496                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   497                           
   498                           
   499                           ;main.c: 30:     TRISB = 0;
   500  072A  1683               	bsf	3,5	;RP0=1, select bank1
   501  072B  1303               	bcf	3,6	;RP1=0, select bank1
   502  072C  0186               	clrf	6	;volatile
   503                           
   504                           ;main.c: 32:     TRISA=0;
   505  072D  0185               	clrf	5	;volatile
   506                           
   507                           ;main.c: 33:     int counter=0;
   508  072E  1283               	bcf	3,5	;RP0=0, select bank0
   509  072F  1303               	bcf	3,6	;RP1=0, select bank0
   510  0730  01D2               	clrf	main@counter
   511  0731  01D3               	clrf	main@counter+1
   512  0732                     l878:
   513                           
   514                           ;main.c: 34:     int nums[] = {0b00111111,
   515  0732  3036               	movlw	main@nums& (0+255)
   516  0733  0084               	movwf	4
   517  0734  30A0               	movlw	low main@F1299
   518  0735  00B2               	movwf	??_main
   519  0736  0804               	movf	4,w
   520  0737  00B3               	movwf	??_main+1
   521  0738  3014               	movlw	20
   522  0739  00B4               	movwf	??_main+2
   523  073A                     u530:
   524  073A  0832               	movf	??_main,w
   525  073B  0084               	movwf	4
   526  073C  1383               	bcf	3,7	;select IRP bank1
   527  073D  0800               	movf	0,w
   528  073E  00B5               	movwf	??_main+3
   529  073F  0AB2               	incf	??_main,f
   530  0740  0833               	movf	??_main+1,w
   531  0741  0084               	movwf	4
   532  0742  0835               	movf	??_main+3,w
   533  0743  0080               	movwf	0
   534  0744  0AB3               	incf	??_main+1,f
   535  0745  0BB4               	decfsz	??_main+2,f
   536  0746  2F3A               	goto	u530
   537  0747                     l880:
   538                           
   539                           ;main.c: 44:     int digits[] = {0b00000111,
   540  0747  304A               	movlw	main@digits& (0+255)
   541  0748  0084               	movwf	4
   542  0749  3058               	movlw	low main@F1301
   543  074A  00B2               	movwf	??_main
   544  074B  0804               	movf	4,w
   545  074C  00B3               	movwf	??_main+1
   546  074D  3008               	movlw	8
   547  074E  00B4               	movwf	??_main+2
   548  074F                     u540:
   549  074F  0832               	movf	??_main,w
   550  0750  0084               	movwf	4
   551  0751  1383               	bcf	3,7	;select IRP bank0
   552  0752  0800               	movf	0,w
   553  0753  00B5               	movwf	??_main+3
   554  0754  0AB2               	incf	??_main,f
   555  0755  0833               	movf	??_main+1,w
   556  0756  0084               	movwf	4
   557  0757  0835               	movf	??_main+3,w
   558  0758  0080               	movwf	0
   559  0759  0AB3               	incf	??_main+1,f
   560  075A  0BB4               	decfsz	??_main+2,f
   561  075B  2F4F               	goto	u540
   562  075C                     l25:	
   563                           ;main.c: 48:     while(1){
   564                           
   565                           
   566                           ;main.c: 49:         for(int i=0;i<50;i++){
   567  075C  01D4               	clrf	main@i
   568  075D  01D5               	clrf	main@i+1
   569  075E                     l886:
   570                           
   571                           ;main.c: 50:             for(int j=0;j<4;j++){
   572  075E  1283               	bcf	3,5	;RP0=0, select bank0
   573  075F  1303               	bcf	3,6	;RP1=0, select bank0
   574  0760  01D6               	clrf	main@j
   575  0761  01D7               	clrf	main@j+1
   576  0762                     l892:
   577                           
   578                           ;main.c: 51:                 PORTB=nums[(counter/pow(10,j))%10];
   579  0762  300A               	movlw	10
   580  0763  1283               	bcf	3,5	;RP0=0, select bank0
   581  0764  1303               	bcf	3,6	;RP1=0, select bank0
   582  0765  00AC               	movwf	___awmod@divisor
   583  0766  3000               	movlw	0
   584  0767  00AD               	movwf	___awmod@divisor+1
   585  0768  0857               	movf	main@j+1,w
   586  0769  00F9               	movwf	pow@pow+1
   587  076A  0856               	movf	main@j,w
   588  076B  00F8               	movwf	pow@pow
   589  076C  300A               	movlw	10
   590  076D  00F6               	movwf	pow@b
   591  076E  3000               	movlw	0
   592  076F  00F7               	movwf	pow@b+1
   593  0770  120A  118A  262D  120A  118A  	fcall	_pow
   594  0775  0877               	movf	?_pow+1,w
   595  0776  1283               	bcf	3,5	;RP0=0, select bank0
   596  0777  1303               	bcf	3,6	;RP1=0, select bank0
   597  0778  00A5               	movwf	___awdiv@divisor+1
   598  0779  0876               	movf	?_pow,w
   599  077A  00A4               	movwf	___awdiv@divisor
   600  077B  0853               	movf	main@counter+1,w
   601  077C  00A7               	movwf	___awdiv@dividend+1
   602  077D  0852               	movf	main@counter,w
   603  077E  00A6               	movwf	___awdiv@dividend
   604  077F  120A  118A  26C1  120A  118A  	fcall	___awdiv
   605  0784  1283               	bcf	3,5	;RP0=0, select bank0
   606  0785  1303               	bcf	3,6	;RP1=0, select bank0
   607  0786  0825               	movf	?___awdiv+1,w
   608  0787  00AF               	movwf	___awmod@dividend+1
   609  0788  0824               	movf	?___awdiv,w
   610  0789  00AE               	movwf	___awmod@dividend
   611  078A  120A  118A  2666  120A  118A  	fcall	___awmod
   612  078F  1283               	bcf	3,5	;RP0=0, select bank0
   613  0790  1303               	bcf	3,6	;RP1=0, select bank0
   614  0791  082C               	movf	?___awmod,w
   615  0792  00B2               	movwf	??_main
   616  0793  0732               	addwf	??_main,w
   617  0794  3E36               	addlw	(low (main@nums| 0))& (0+255)
   618  0795  0084               	movwf	4
   619  0796  1383               	bcf	3,7	;select IRP bank0
   620  0797  0800               	movf	0,w
   621  0798  0086               	movwf	6	;volatile
   622  0799                     l894:
   623                           
   624                           ;main.c: 52:                 PORTA=digits[j];
   625  0799  0856               	movf	main@j,w
   626  079A  00B2               	movwf	??_main
   627  079B  0732               	addwf	??_main,w
   628  079C  3E4A               	addlw	(low (main@digits| 0))& (0+255)
   629  079D  0084               	movwf	4
   630  079E  0800               	movf	0,w
   631  079F  0085               	movwf	5	;volatile
   632  07A0                     l896:
   633                           
   634                           ;main.c: 53:                 _delay((unsigned long)((5)*(16000000/4000.0)));
   635  07A0  301A               	movlw	26
   636  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   637  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   638  07A3  00B3               	movwf	??_main+1
   639  07A4  30F7               	movlw	247
   640  07A5  00B2               	movwf	??_main
   641  07A6                     u577:
   642  07A6  0BB2               	decfsz	??_main,f
   643  07A7  2FA6               	goto	u577
   644  07A8  0BB3               	decfsz	??_main+1,f
   645  07A9  2FA6               	goto	u577
   646  07AA  2FAB               	nop2
   647  07AB                     l898:
   648                           
   649                           ;main.c: 54:             }
   650  07AB  3001               	movlw	1
   651  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   652  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   653  07AE  07D6               	addwf	main@j,f
   654  07AF  1803               	skipnc
   655  07B0  0AD7               	incf	main@j+1,f
   656  07B1  3000               	movlw	0
   657  07B2  07D7               	addwf	main@j+1,f
   658  07B3                     l900:
   659  07B3  0857               	movf	main@j+1,w
   660  07B4  3A80               	xorlw	128
   661  07B5  00FF               	movwf	btemp+1
   662  07B6  3080               	movlw	128
   663  07B7  027F               	subwf	btemp+1,w
   664  07B8  1D03               	skipz
   665  07B9  2FBC               	goto	u555
   666  07BA  3004               	movlw	4
   667  07BB  0256               	subwf	main@j,w
   668  07BC                     u555:
   669  07BC  1C03               	skipc
   670  07BD  2FBF               	goto	u551
   671  07BE  2FC0               	goto	u550
   672  07BF                     u551:
   673  07BF  2F62               	goto	l892
   674  07C0                     u550:
   675  07C0                     l902:
   676                           
   677                           ;main.c: 71:         }
   678  07C0  3001               	movlw	1
   679  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   680  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   681  07C3  07D4               	addwf	main@i,f
   682  07C4  1803               	skipnc
   683  07C5  0AD5               	incf	main@i+1,f
   684  07C6  3000               	movlw	0
   685  07C7  07D5               	addwf	main@i+1,f
   686  07C8                     l904:
   687  07C8  0855               	movf	main@i+1,w
   688  07C9  3A80               	xorlw	128
   689  07CA  00FF               	movwf	btemp+1
   690  07CB  3080               	movlw	128
   691  07CC  027F               	subwf	btemp+1,w
   692  07CD  1D03               	skipz
   693  07CE  2FD1               	goto	u565
   694  07CF  3032               	movlw	50
   695  07D0  0254               	subwf	main@i,w
   696  07D1                     u565:
   697  07D1  1C03               	skipc
   698  07D2  2FD4               	goto	u561
   699  07D3  2FD5               	goto	u560
   700  07D4                     u561:
   701  07D4  2F5E               	goto	l886
   702  07D5                     u560:
   703  07D5                     l906:
   704                           
   705                           ;main.c: 72:         counter++;
   706  07D5  3001               	movlw	1
   707  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   708  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   709  07D8  07D2               	addwf	main@counter,f
   710  07D9  1803               	skipnc
   711  07DA  0AD3               	incf	main@counter+1,f
   712  07DB  3000               	movlw	0
   713  07DC  07D3               	addwf	main@counter+1,f
   714  07DD  2F5C               	goto	l25
   715  07DE  120A  118A  2800   	ljmp	start
   716  07E1                     __end_of_main:
   717                           
   718                           	psect	text1
   719  062D                     __ptext1:	
   720 ;; *************** function _pow *****************
   721 ;; Defined at:
   722 ;;		line 20 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  b               2    6[COMMON] int 
   725 ;;  pow             2    8[COMMON] int 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  i               2    0[BANK0 ] int 
   728 ;;  ans             2    2[BANK0 ] int 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  2    6[COMMON] int 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0, pclath, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         4       0       0       0       0
   739 ;;      Locals:         0       4       0       0       0
   740 ;;      Temps:          1       0       0       0       0
   741 ;;      Totals:         5       4       0       0       0
   742 ;;Total ram usage:        9 bytes
   743 ;; Hardware stack levels used: 1
   744 ;; Hardware stack levels required when called: 1
   745 ;; This function calls:
   746 ;;		___wmul
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752  062D                     _pow:	
   753                           ;psect for function _pow
   754                           
   755  062D                     l780:	
   756                           ;incstack = 0
   757                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
   758                           
   759                           
   760                           ;main.c: 21:     int ans=1;
   761  062D  3001               	movlw	1
   762  062E  1283               	bcf	3,5	;RP0=0, select bank0
   763  062F  1303               	bcf	3,6	;RP1=0, select bank0
   764  0630  00A2               	movwf	pow@ans
   765  0631  3000               	movlw	0
   766  0632  00A3               	movwf	pow@ans+1
   767  0633                     l782:
   768                           
   769                           ;main.c: 22:     for (int i=0;i<pow;i++){
   770  0633  01A0               	clrf	pow@i
   771  0634  01A1               	clrf	pow@i+1
   772  0635  2E51               	goto	l788
   773  0636                     l784:
   774                           
   775                           ;main.c: 23:         ans*=b;
   776  0636  0877               	movf	pow@b+1,w
   777  0637  00F1               	movwf	___wmul@multiplier+1
   778  0638  0876               	movf	pow@b,w
   779  0639  00F0               	movwf	___wmul@multiplier
   780  063A  1283               	bcf	3,5	;RP0=0, select bank0
   781  063B  1303               	bcf	3,6	;RP1=0, select bank0
   782  063C  0823               	movf	pow@ans+1,w
   783  063D  00F3               	movwf	___wmul@multiplicand+1
   784  063E  0822               	movf	pow@ans,w
   785  063F  00F2               	movwf	___wmul@multiplicand
   786  0640  120A  118A  2608  120A  118A  	fcall	___wmul
   787  0645  0871               	movf	?___wmul+1,w
   788  0646  1283               	bcf	3,5	;RP0=0, select bank0
   789  0647  1303               	bcf	3,6	;RP1=0, select bank0
   790  0648  00A3               	movwf	pow@ans+1
   791  0649  0870               	movf	?___wmul,w
   792  064A  00A2               	movwf	pow@ans
   793  064B                     l786:
   794                           
   795                           ;main.c: 24:     }
   796  064B  3001               	movlw	1
   797  064C  07A0               	addwf	pow@i,f
   798  064D  1803               	skipnc
   799  064E  0AA1               	incf	pow@i+1,f
   800  064F  3000               	movlw	0
   801  0650  07A1               	addwf	pow@i+1,f
   802  0651                     l788:
   803  0651  0821               	movf	pow@i+1,w
   804  0652  3A80               	xorlw	128
   805  0653  00FA               	movwf	??_pow
   806  0654  0879               	movf	pow@pow+1,w
   807  0655  3A80               	xorlw	128
   808  0656  027A               	subwf	??_pow,w
   809  0657  1D03               	skipz
   810  0658  2E5B               	goto	u335
   811  0659  0878               	movf	pow@pow,w
   812  065A  0220               	subwf	pow@i,w
   813  065B                     u335:
   814  065B  1C03               	skipc
   815  065C  2E5E               	goto	u331
   816  065D  2E5F               	goto	u330
   817  065E                     u331:
   818  065E  2E36               	goto	l784
   819  065F                     u330:
   820  065F                     l790:
   821                           
   822                           ;main.c: 25:     return ans;
   823  065F  1283               	bcf	3,5	;RP0=0, select bank0
   824  0660  1303               	bcf	3,6	;RP1=0, select bank0
   825  0661  0823               	movf	pow@ans+1,w
   826  0662  00F7               	movwf	?_pow+1
   827  0663  0822               	movf	pow@ans,w
   828  0664  00F6               	movwf	?_pow
   829  0665                     l16:
   830  0665  0008               	return
   831  0666                     __end_of_pow:
   832                           
   833                           	psect	text2
   834  0608                     __ptext2:	
   835 ;; *************** function ___wmul *****************
   836 ;; Defined at:
   837 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  multiplier      2    0[COMMON] unsigned int 
   840 ;;  multiplicand    2    2[COMMON] unsigned int 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  product         2    4[COMMON] unsigned int 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  2    0[COMMON] unsigned int 
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         4       0       0       0       0
   853 ;;      Locals:         2       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0
   855 ;;      Totals:         6       0       0       0       0
   856 ;;Total ram usage:        6 bytes
   857 ;; Hardware stack levels used: 1
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_pow
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865  0608                     ___wmul:	
   866                           ;psect for function ___wmul
   867                           
   868  0608                     l766:	
   869                           ;incstack = 0
   870                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   871                           
   872  0608  01F4               	clrf	___wmul@product
   873  0609  01F5               	clrf	___wmul@product+1
   874  060A                     l768:
   875  060A  1C70               	btfss	___wmul@multiplier,0
   876  060B  2E0D               	goto	u291
   877  060C  2E0E               	goto	u290
   878  060D                     u291:
   879  060D  2E14               	goto	l118
   880  060E                     u290:
   881  060E                     l770:
   882  060E  0872               	movf	___wmul@multiplicand,w
   883  060F  07F4               	addwf	___wmul@product,f
   884  0610  1803               	skipnc
   885  0611  0AF5               	incf	___wmul@product+1,f
   886  0612  0873               	movf	___wmul@multiplicand+1,w
   887  0613  07F5               	addwf	___wmul@product+1,f
   888  0614                     l118:
   889  0614  3001               	movlw	1
   890  0615                     u305:
   891  0615  1003               	clrc
   892  0616  0DF2               	rlf	___wmul@multiplicand,f
   893  0617  0DF3               	rlf	___wmul@multiplicand+1,f
   894  0618  3EFF               	addlw	-1
   895  0619  1D03               	skipz
   896  061A  2E15               	goto	u305
   897  061B                     l772:
   898  061B  3001               	movlw	1
   899  061C                     u315:
   900  061C  1003               	clrc
   901  061D  0CF1               	rrf	___wmul@multiplier+1,f
   902  061E  0CF0               	rrf	___wmul@multiplier,f
   903  061F  3EFF               	addlw	-1
   904  0620  1D03               	skipz
   905  0621  2E1C               	goto	u315
   906  0622                     l774:
   907  0622  0870               	movf	___wmul@multiplier,w
   908  0623  0471               	iorwf	___wmul@multiplier+1,w
   909  0624  1D03               	btfss	3,2
   910  0625  2E27               	goto	u321
   911  0626  2E28               	goto	u320
   912  0627                     u321:
   913  0627  2E0A               	goto	l768
   914  0628                     u320:
   915  0628                     l776:
   916  0628  0875               	movf	___wmul@product+1,w
   917  0629  00F1               	movwf	?___wmul+1
   918  062A  0874               	movf	___wmul@product,w
   919  062B  00F0               	movwf	?___wmul
   920  062C                     l120:
   921  062C  0008               	return
   922  062D                     __end_of___wmul:
   923                           
   924                           	psect	text3
   925  0666                     __ptext3:	
   926 ;; *************** function ___awmod *****************
   927 ;; Defined at:
   928 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  divisor         2   12[BANK0 ] int 
   931 ;;  dividend        2   14[BANK0 ] int 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  sign            1   17[BANK0 ] unsigned char 
   934 ;;  counter         1   16[BANK0 ] unsigned char 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  2   12[BANK0 ] int 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         0       4       0       0       0
   945 ;;      Locals:         0       2       0       0       0
   946 ;;      Temps:          1       0       0       0       0
   947 ;;      Totals:         1       6       0       0       0
   948 ;;Total ram usage:        7 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957  0666                     ___awmod:	
   958                           ;psect for function ___awmod
   959                           
   960  0666                     l838:	
   961                           ;incstack = 0
   962                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   963                           
   964  0666  1283               	bcf	3,5	;RP0=0, select bank0
   965  0667  1303               	bcf	3,6	;RP1=0, select bank0
   966  0668  01B1               	clrf	___awmod@sign
   967  0669                     l840:
   968  0669  1FAF               	btfss	___awmod@dividend+1,7
   969  066A  2E6C               	goto	u441
   970  066B  2E6D               	goto	u440
   971  066C                     u441:
   972  066C  2E74               	goto	l846
   973  066D                     u440:
   974  066D                     l842:
   975  066D  09AE               	comf	___awmod@dividend,f
   976  066E  09AF               	comf	___awmod@dividend+1,f
   977  066F  0AAE               	incf	___awmod@dividend,f
   978  0670  1903               	skipnz
   979  0671  0AAF               	incf	___awmod@dividend+1,f
   980  0672                     l844:
   981  0672  01B1               	clrf	___awmod@sign
   982  0673  0AB1               	incf	___awmod@sign,f
   983  0674                     l846:
   984  0674  1FAD               	btfss	___awmod@divisor+1,7
   985  0675  2E77               	goto	u451
   986  0676  2E78               	goto	u450
   987  0677                     u451:
   988  0677  2E7D               	goto	l850
   989  0678                     u450:
   990  0678                     l848:
   991  0678  09AC               	comf	___awmod@divisor,f
   992  0679  09AD               	comf	___awmod@divisor+1,f
   993  067A  0AAC               	incf	___awmod@divisor,f
   994  067B  1903               	skipnz
   995  067C  0AAD               	incf	___awmod@divisor+1,f
   996  067D                     l850:
   997  067D  082C               	movf	___awmod@divisor,w
   998  067E  042D               	iorwf	___awmod@divisor+1,w
   999  067F  1903               	btfsc	3,2
  1000  0680  2E82               	goto	u461
  1001  0681  2E83               	goto	u460
  1002  0682                     u461:
  1003  0682  2EB2               	goto	l868
  1004  0683                     u460:
  1005  0683                     l852:
  1006  0683  01B0               	clrf	___awmod@counter
  1007  0684  0AB0               	incf	___awmod@counter,f
  1008  0685  2E91               	goto	l858
  1009  0686                     l854:
  1010  0686  3001               	movlw	1
  1011  0687                     u475:
  1012  0687  1003               	clrc
  1013  0688  0DAC               	rlf	___awmod@divisor,f
  1014  0689  0DAD               	rlf	___awmod@divisor+1,f
  1015  068A  3EFF               	addlw	-1
  1016  068B  1D03               	skipz
  1017  068C  2E87               	goto	u475
  1018  068D                     l856:
  1019  068D  3001               	movlw	1
  1020  068E  00FC               	movwf	??___awmod
  1021  068F  087C               	movf	??___awmod,w
  1022  0690  07B0               	addwf	___awmod@counter,f
  1023  0691                     l858:
  1024  0691  1FAD               	btfss	___awmod@divisor+1,7
  1025  0692  2E94               	goto	u481
  1026  0693  2E95               	goto	u480
  1027  0694                     u481:
  1028  0694  2E86               	goto	l854
  1029  0695                     u480:
  1030  0695                     l860:
  1031  0695  082D               	movf	___awmod@divisor+1,w
  1032  0696  022F               	subwf	___awmod@dividend+1,w
  1033  0697  1D03               	skipz
  1034  0698  2E9B               	goto	u495
  1035  0699  082C               	movf	___awmod@divisor,w
  1036  069A  022E               	subwf	___awmod@dividend,w
  1037  069B                     u495:
  1038  069B  1C03               	skipc
  1039  069C  2E9E               	goto	u491
  1040  069D  2E9F               	goto	u490
  1041  069E                     u491:
  1042  069E  2EA5               	goto	l864
  1043  069F                     u490:
  1044  069F                     l862:
  1045  069F  082C               	movf	___awmod@divisor,w
  1046  06A0  02AE               	subwf	___awmod@dividend,f
  1047  06A1  082D               	movf	___awmod@divisor+1,w
  1048  06A2  1C03               	skipc
  1049  06A3  03AF               	decf	___awmod@dividend+1,f
  1050  06A4  02AF               	subwf	___awmod@dividend+1,f
  1051  06A5                     l864:
  1052  06A5  3001               	movlw	1
  1053  06A6                     u505:
  1054  06A6  1003               	clrc
  1055  06A7  0CAD               	rrf	___awmod@divisor+1,f
  1056  06A8  0CAC               	rrf	___awmod@divisor,f
  1057  06A9  3EFF               	addlw	-1
  1058  06AA  1D03               	skipz
  1059  06AB  2EA6               	goto	u505
  1060  06AC                     l866:
  1061  06AC  3001               	movlw	1
  1062  06AD  02B0               	subwf	___awmod@counter,f
  1063  06AE  1D03               	btfss	3,2
  1064  06AF  2EB1               	goto	u511
  1065  06B0  2EB2               	goto	u510
  1066  06B1                     u511:
  1067  06B1  2E95               	goto	l860
  1068  06B2                     u510:
  1069  06B2                     l868:
  1070  06B2  0831               	movf	___awmod@sign,w
  1071  06B3  1903               	btfsc	3,2
  1072  06B4  2EB6               	goto	u521
  1073  06B5  2EB7               	goto	u520
  1074  06B6                     u521:
  1075  06B6  2EBC               	goto	l872
  1076  06B7                     u520:
  1077  06B7                     l870:
  1078  06B7  09AE               	comf	___awmod@dividend,f
  1079  06B8  09AF               	comf	___awmod@dividend+1,f
  1080  06B9  0AAE               	incf	___awmod@dividend,f
  1081  06BA  1903               	skipnz
  1082  06BB  0AAF               	incf	___awmod@dividend+1,f
  1083  06BC                     l872:
  1084  06BC  082F               	movf	___awmod@dividend+1,w
  1085  06BD  00AD               	movwf	?___awmod+1
  1086  06BE  082E               	movf	___awmod@dividend,w
  1087  06BF  00AC               	movwf	?___awmod
  1088  06C0                     l284:
  1089  06C0  0008               	return
  1090  06C1                     __end_of___awmod:
  1091                           
  1092                           	psect	text4
  1093  06C1                     __ptext4:	
  1094 ;; *************** function ___awdiv *****************
  1095 ;; Defined at:
  1096 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  divisor         2    4[BANK0 ] int 
  1099 ;;  dividend        2    6[BANK0 ] int 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  quotient        2   10[BANK0 ] int 
  1102 ;;  sign            1    9[BANK0 ] unsigned char 
  1103 ;;  counter         1    8[BANK0 ] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  2    4[BANK0 ] int 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       4       0       0       0
  1114 ;;      Locals:         0       4       0       0       0
  1115 ;;      Temps:          1       0       0       0       0
  1116 ;;      Totals:         1       8       0       0       0
  1117 ;;Total ram usage:        9 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126  06C1                     ___awdiv:	
  1127                           ;psect for function ___awdiv
  1128                           
  1129  06C1                     l794:	
  1130                           ;incstack = 0
  1131                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1132                           
  1133  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1134  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1135  06C3  01A9               	clrf	___awdiv@sign
  1136  06C4                     l796:
  1137  06C4  1FA5               	btfss	___awdiv@divisor+1,7
  1138  06C5  2EC7               	goto	u341
  1139  06C6  2EC8               	goto	u340
  1140  06C7                     u341:
  1141  06C7  2ECF               	goto	l802
  1142  06C8                     u340:
  1143  06C8                     l798:
  1144  06C8  09A4               	comf	___awdiv@divisor,f
  1145  06C9  09A5               	comf	___awdiv@divisor+1,f
  1146  06CA  0AA4               	incf	___awdiv@divisor,f
  1147  06CB  1903               	skipnz
  1148  06CC  0AA5               	incf	___awdiv@divisor+1,f
  1149  06CD                     l800:
  1150  06CD  01A9               	clrf	___awdiv@sign
  1151  06CE  0AA9               	incf	___awdiv@sign,f
  1152  06CF                     l802:
  1153  06CF  1FA7               	btfss	___awdiv@dividend+1,7
  1154  06D0  2ED2               	goto	u351
  1155  06D1  2ED3               	goto	u350
  1156  06D2                     u351:
  1157  06D2  2EDC               	goto	l808
  1158  06D3                     u350:
  1159  06D3                     l804:
  1160  06D3  09A6               	comf	___awdiv@dividend,f
  1161  06D4  09A7               	comf	___awdiv@dividend+1,f
  1162  06D5  0AA6               	incf	___awdiv@dividend,f
  1163  06D6  1903               	skipnz
  1164  06D7  0AA7               	incf	___awdiv@dividend+1,f
  1165  06D8                     l806:
  1166  06D8  3001               	movlw	1
  1167  06D9  00FB               	movwf	??___awdiv
  1168  06DA  087B               	movf	??___awdiv,w
  1169  06DB  06A9               	xorwf	___awdiv@sign,f
  1170  06DC                     l808:
  1171  06DC  01AA               	clrf	___awdiv@quotient
  1172  06DD  01AB               	clrf	___awdiv@quotient+1
  1173  06DE                     l810:
  1174  06DE  0824               	movf	___awdiv@divisor,w
  1175  06DF  0425               	iorwf	___awdiv@divisor+1,w
  1176  06E0  1903               	btfsc	3,2
  1177  06E1  2EE3               	goto	u361
  1178  06E2  2EE4               	goto	u360
  1179  06E3                     u361:
  1180  06E3  2F1B               	goto	l830
  1181  06E4                     u360:
  1182  06E4                     l812:
  1183  06E4  01A8               	clrf	___awdiv@counter
  1184  06E5  0AA8               	incf	___awdiv@counter,f
  1185  06E6  2EF2               	goto	l818
  1186  06E7                     l814:
  1187  06E7  3001               	movlw	1
  1188  06E8                     u375:
  1189  06E8  1003               	clrc
  1190  06E9  0DA4               	rlf	___awdiv@divisor,f
  1191  06EA  0DA5               	rlf	___awdiv@divisor+1,f
  1192  06EB  3EFF               	addlw	-1
  1193  06EC  1D03               	skipz
  1194  06ED  2EE8               	goto	u375
  1195  06EE                     l816:
  1196  06EE  3001               	movlw	1
  1197  06EF  00FB               	movwf	??___awdiv
  1198  06F0  087B               	movf	??___awdiv,w
  1199  06F1  07A8               	addwf	___awdiv@counter,f
  1200  06F2                     l818:
  1201  06F2  1FA5               	btfss	___awdiv@divisor+1,7
  1202  06F3  2EF5               	goto	u381
  1203  06F4  2EF6               	goto	u380
  1204  06F5                     u381:
  1205  06F5  2EE7               	goto	l814
  1206  06F6                     u380:
  1207  06F6                     l820:
  1208  06F6  3001               	movlw	1
  1209  06F7                     u395:
  1210  06F7  1003               	clrc
  1211  06F8  0DAA               	rlf	___awdiv@quotient,f
  1212  06F9  0DAB               	rlf	___awdiv@quotient+1,f
  1213  06FA  3EFF               	addlw	-1
  1214  06FB  1D03               	skipz
  1215  06FC  2EF7               	goto	u395
  1216  06FD  0825               	movf	___awdiv@divisor+1,w
  1217  06FE  0227               	subwf	___awdiv@dividend+1,w
  1218  06FF  1D03               	skipz
  1219  0700  2F03               	goto	u405
  1220  0701  0824               	movf	___awdiv@divisor,w
  1221  0702  0226               	subwf	___awdiv@dividend,w
  1222  0703                     u405:
  1223  0703  1C03               	skipc
  1224  0704  2F06               	goto	u401
  1225  0705  2F07               	goto	u400
  1226  0706                     u401:
  1227  0706  2F0E               	goto	l826
  1228  0707                     u400:
  1229  0707                     l822:
  1230  0707  0824               	movf	___awdiv@divisor,w
  1231  0708  02A6               	subwf	___awdiv@dividend,f
  1232  0709  0825               	movf	___awdiv@divisor+1,w
  1233  070A  1C03               	skipc
  1234  070B  03A7               	decf	___awdiv@dividend+1,f
  1235  070C  02A7               	subwf	___awdiv@dividend+1,f
  1236  070D                     l824:
  1237  070D  142A               	bsf	___awdiv@quotient,0
  1238  070E                     l826:
  1239  070E  3001               	movlw	1
  1240  070F                     u415:
  1241  070F  1003               	clrc
  1242  0710  0CA5               	rrf	___awdiv@divisor+1,f
  1243  0711  0CA4               	rrf	___awdiv@divisor,f
  1244  0712  3EFF               	addlw	-1
  1245  0713  1D03               	skipz
  1246  0714  2F0F               	goto	u415
  1247  0715                     l828:
  1248  0715  3001               	movlw	1
  1249  0716  02A8               	subwf	___awdiv@counter,f
  1250  0717  1D03               	btfss	3,2
  1251  0718  2F1A               	goto	u421
  1252  0719  2F1B               	goto	u420
  1253  071A                     u421:
  1254  071A  2EF6               	goto	l820
  1255  071B                     u420:
  1256  071B                     l830:
  1257  071B  0829               	movf	___awdiv@sign,w
  1258  071C  1903               	btfsc	3,2
  1259  071D  2F1F               	goto	u431
  1260  071E  2F20               	goto	u430
  1261  071F                     u431:
  1262  071F  2F25               	goto	l834
  1263  0720                     u430:
  1264  0720                     l832:
  1265  0720  09AA               	comf	___awdiv@quotient,f
  1266  0721  09AB               	comf	___awdiv@quotient+1,f
  1267  0722  0AAA               	incf	___awdiv@quotient,f
  1268  0723  1903               	skipnz
  1269  0724  0AAB               	incf	___awdiv@quotient+1,f
  1270  0725                     l834:
  1271  0725  082B               	movf	___awdiv@quotient+1,w
  1272  0726  00A5               	movwf	?___awdiv+1
  1273  0727  082A               	movf	___awdiv@quotient,w
  1274  0728  00A4               	movwf	?___awdiv
  1275  0729                     l271:
  1276  0729  0008               	return
  1277  072A                     __end_of___awdiv:
  1278  007E                     btemp	set	126	;btemp
  1279  007E                     wtemp0	set	126
  1280                           
  1281                           	psect	idloc
  1282                           
  1283                           ;Config register IDLOC0 @ 0x2000
  1284                           ;	unspecified, using default values
  1285  2000                     	org	8192
  1286  2000  3FFF               	dw	16383
  1287                           
  1288                           ;Config register IDLOC1 @ 0x2001
  1289                           ;	unspecified, using default values
  1290  2001                     	org	8193
  1291  2001  3FFF               	dw	16383
  1292                           
  1293                           ;Config register IDLOC2 @ 0x2002
  1294                           ;	unspecified, using default values
  1295  2002                     	org	8194
  1296  2002  3FFF               	dw	16383
  1297                           
  1298                           ;Config register IDLOC3 @ 0x2003
  1299                           ;	unspecified, using default values
  1300  2003                     	org	8195
  1301  2003  3FFF               	dw	16383
  1302                           
  1303                           	psect	config
  1304                           
  1305                           ;Config register CONFIG1 @ 0x2007
  1306                           ;	Oscillator Selection bits
  1307                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1308                           ;	Watchdog Timer Enable bit
  1309                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1310                           ;	Power-up Timer Enable bit
  1311                           ;	PWRTE = OFF, PWRT disabled
  1312                           ;	RE3/MCLR pin function select bit
  1313                           ;	MCLRE = 0x1, unprogrammed default
  1314                           ;	Code Protection bit
  1315                           ;	CP = OFF, Program memory code protection is disabled
  1316                           ;	Data Code Protection bit
  1317                           ;	CPD = OFF, Data memory code protection is disabled
  1318                           ;	Brown Out Reset Selection bits
  1319                           ;	BOREN = ON, BOR enabled
  1320                           ;	Internal External Switchover bit
  1321                           ;	IESO = 0x1, unprogrammed default
  1322                           ;	Fail-Safe Clock Monitor Enabled bit
  1323                           ;	FCMEN = 0x1, unprogrammed default
  1324                           ;	Low Voltage Programming Enable bit
  1325                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1326                           ;	In-Circuit Debugger Mode bit
  1327                           ;	DEBUG = 0x1, unprogrammed default
  1328  2007                     	org	8199
  1329  2007  2FF2               	dw	12274
  1330                           
  1331                           ;Config register CONFIG2 @ 0x2008
  1332                           ;	Brown-out Reset Selection bit
  1333                           ;	BOR4V = 0x1, unprogrammed default
  1334                           ;	Flash Program Memory Self Write Enable bits
  1335                           ;	WRT = OFF, Write protection off
  1336  2008                     	org	8200
  1337  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     56      64
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod
    _pow->___wmul
    ___awmod->___awdiv
    ___awdiv->_pow

Critical Paths under _main in BANK0

    _main->___awmod
    ___awmod->___awdiv
    ___awdiv->_pow

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0    1618
                                             18 BANK0     38    38      0
                            ___awdiv
                            ___awmod
                                _pow
 ---------------------------------------------------------------------------------
 (1) _pow                                                  9     5      4     510
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     448
                                             12 COMMON     1     1      0
                                             12 BANK0      6     2      4
                            ___awdiv (ARG)
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                             11 COMMON     1     1      0
                                              4 BANK0      8     4      4
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     _pow (ARG)
       ___wmul
   ___awmod
     ___awdiv (ARG)
     _pow (ARG)
   _pow

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     38      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      61      12        0.0%
ABS                  0      0      61       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Sep 13 07:09:31 2022

                      pc 0002                       l16 0665                       l25 075C  
           ___awdiv@sign 0029                       fsr 0004      ___wmul@multiplicand 0072  
                    l120 062C                      l118 0614                      l271 0729  
                    l284 06C0                      l800 06CD                      l810 06DE  
                    l802 06CF                      l820 06F6                      l812 06E4  
                    l804 06D3                      l900 07B3                      l822 0707  
                    l814 06E7                      l830 071B                      l806 06D8  
                    l902 07C0                      l832 0720                      l824 070D  
                    l816 06EE                      l808 06DC                      l840 0669  
                    l904 07C8                      l834 0725                      l826 070E  
                    l818 06F2                      l850 067D                      l842 066D  
                    l770 060E                      l906 07D5                      l828 0715  
                    l860 0695                      l852 0683                      l844 0672  
                    l772 061B                      l780 062D                      l870 06B7  
                    l862 069F                      l854 0686                      l846 0674  
                    l838 0666                      l774 0622                      l766 0608  
                    l790 065F                      l782 0633                      l872 06BC  
                    l864 06A5                      l856 068D                      l848 0678  
                    l776 0628                      l768 060A                      l784 0636  
                    l880 0747                      l794 06C1                      l866 06AC  
                    l858 0691                      l786 064B                      l796 06C4  
                    l868 06B2                      l788 0651                      l892 0762  
                    l876 072A                      l798 06C8                      l894 0799  
                    l886 075E                      l878 0732                      l896 07A0  
                    l898 07AB                      u400 0707                      u320 0628  
                    u401 0706                      u321 0627                      u305 0615  
                    u330 065F                      u315 061C                      u331 065E  
                    u420 071B                      u340 06C8                      u421 071A  
                    u405 0703                      u341 06C7                      u430 0720  
                    u350 06D3                      u510 06B2                      u431 071F  
                    u415 070F                      u351 06D2                      u511 06B1  
                    u335 065B                      u360 06E4                      u520 06B7  
                    u440 066D                      u361 06E3                      u521 06B6  
                    u505 06A6                      u441 066C                      u450 0678  
                    u290 060E                      u530 073A                      u451 0677  
                    u291 060D                      u380 06F6                      u460 0683  
                    u540 074F                      u381 06F5                      u461 0682  
                    u550 07C0                      u375 06E8                      u551 07BF  
                    u480 0695                      u560 07D5                      u481 0694  
                    u561 07D4                      u490 069F                      u395 06F7  
                    u491 069E                      u475 0687                      u555 07BC  
                    u565 07D1                      u495 069B                      u577 07A6  
                    _pow 062D                      fsr0 0004                      indf 0000  
           ___awmod@sign 0031                     ?_pow 0076              main@counter 0052  
                   _main 072A                     btemp 007E                     pow@b 0076  
                   pow@i 0020                     start 0000                    ??_pow 007A  
                  ?_main 0070          __end_of___awdiv 072A          __end_of___awmod 06C1  
        ___awdiv@divisor 0024          ___awdiv@counter 0028                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  main@i 0054                    main@j 0056                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E1  
           __end_of_main 07E1                   ??_main 0032         ___awdiv@dividend 0026  
                 ___wmul 0608                ??___awdiv 007B                ??___awmod 007C  
       ___awdiv@quotient 002A          ___awmod@divisor 002C          ___awmod@counter 0030  
                 pow@ans 0022                   pow@pow 0078  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 05D9             __pidataBANK1 05F4  
             __pmaintext 072A                  ?___wmul 0070                  ___awdiv 06C1  
                ___awmod 0666                  __ptext1 062D                  __ptext2 0608  
                __ptext3 0666                  __ptext4 06C1         ___awmod@dividend 002E  
   end_of_initialization 07FC               main@digits 004A           __end_of___wmul 062D  
    start_initialization 07E1              __end_of_pow 0666                 ??___wmul 0074  
             init_fetch0 05E1              __pdataBANK0 0058              __pdataBANK1 00A0  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0024  
               ?___awmod 002C           ___wmul@product 0074                main@F1301 0058  
              main@F1299 00A0        ___wmul@multiplier 0070                 main@nums 0036  
               init_ram0 05E5  
